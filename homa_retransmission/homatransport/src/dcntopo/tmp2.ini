[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.
print-undisposed=false
# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo 
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 8}
DcnTopo.numTors = ${numTors = 8}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 100Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 100Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.0us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.0us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.5us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.5us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.25us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"

######################## Homa Transport Parameters ###############################
#rttBytes is computed as sending one full packet in one way and a grant in the other way.
**.host[*].**.rttBytes = ${RTT=35000} B ##10000B is the rttBytes (ie. rtt*nicLinkSpeed).
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT}"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 33000 }B
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
#**.realLoadFactor = ${rlf=0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.73, 0.77, 0.8, 0.83, 0.87, 0.9}
#**.realLoadFactor = ${rlf=0.5, 0.6, 0.7,0.8}
#**.realLoadFactor = ${rlf=0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0}
**.realLoadFactor = ${rlf=0.54}
#result-dir = results/testing/unschedPrio/LoadFactor__${rlf}--UnschedResolutionMode__${unschedPrioResolutionMode}--boostTailBytesPrio__${boostTailBytesPrio}


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -

[Config WorkloadHadoop]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_HADOOP_ALL}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =130 227 248 271 297 303 308 310 313 315 318 321 326 331 335 345 350 360 371 376 395 420 435 452 463 480 491 502 513 525 537 549 561 574 587 600 607 615 630 646 662 671 685 702 719 737 762 787 825 885 960 1063 1177 1303 1425 1559 1624 1865 2862 4582 6387 10373 31946 36844 40382 42493 44531 45913 47435 48609 49408 50632 57684 69014 74266 77041 79595 81565 91238 104584 120373 141975 167112 197911 228718 273075 406302 832442 1660940 3430822 10000000}"
#**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*1.0}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
# **.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/WorkloadHadoop/comparison/linkCheckBytes__${linkCheckBytes}


[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = DCTCP}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 2884 4326 5768 7210 8652 10094 11536 12978 15862 17304 18746 21630 23072 24514 25956 27398 28840 31724 34608 36050 37492 40376 41818 44702 46144 47586 50470 53354 54796 57680 59122 62006 63448 66332 67774 70658 72100 74984 76426 93730 109592 126896 142758 160062 175924 191786 269654 346080 423948 500374 576800 654668 731094 808962 885388 961814 1058428 1155042 1250214 1346828 1442000 1538614 1635228 1730400 1827014 1922186 2210586 2498986 2787386 3075786 3364186 3652586 3940986 4229386 4517786 4806186 11537442 13459628 15381814 17305442 19227628 21149814 23073442 24995628 26917814 28840000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*1.0}
#**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
# **.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  5.25s, 5.25s, 3.75s, 3.75s, 3.75s, 3.75s, 3.4s, 3.4s, 3.4s, 3.4s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..18 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/WorkloadDCTCP/comparison/linkCheckBytes__${linkCheckBytes}

[Config WorkloadWebServer]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_WEB_SERVER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =55 62 65 72 80 84 95 101 113 120 136 153 164 175 187 201 215 246 263 281 301 388 538 639 765 849 919 959 990 1033 1076 1187 1298 1425 1547 1598 1664 1733 1806 1889 2083 2169 2259 2449 2551 2766 2881 3088 3270 3464 3669 3887 4183 4373 4676 5000 5281 5681 6093 6581 7000 7584 8288 9000 9895 11095 12310 13659 15155 17410 19318 21695 24512 27671 31784 36182 41993 48995 57852 70941 87469 124617 154043 169888 187363 205362 222326 240691 253770 271823 283560 300000 315200 331170 347950 367019 390285 429368 565213 1000000}"
#**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.899}
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*1.0}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].flowSizeFileName = "HostidSizeInterarrival.txt"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  0.02s, 0.02s, 0.02s, 0.02s, 0.02s ! rlf}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  0.004s, 0.004s, 0.004s, 0.004s, 3.75s, 3.75s, 3.4s, 3.4s, 3.4s, 3.4s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
seed-set = ${repetition}
#seed-0-mt = ${seedInd = 0..4 ! rlf}
seed-0-mt = ${seedInd = 0..11 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes_webserver_newtable_${linkCheckBytes}

[Config WorkloadCacheFollower]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = FACEBOOK_CACHE_FOLLOWER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =60 68 107 144 235 279 293 308 324 340 366 394 423 455 490 506 540 577 613 652 665 693 707 858 983 1055 1082 1146 1391 1435 1754 2169 2767 3887 6000 12161 20740 29687 47435 66258 94071 113930 133012 150311 164411 181304 196700 209954 225934 245121 260573 286178 305460 338223 377564 416360 500167 553812 576849 1408227 1540319 1597864 1647457 1681372 1744186 1798321 1831605 1865505 1935199 2023926 2091000 2160296 2213771 2259343 2329467 2372582 2416494 2461220 2506773 2553169 2605728 2659370 2714115 2769988 2827011 2933211 3105433 3837698}"
#**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*0.898}
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf*1.0}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].flowSizeFileName = "HostidSizeInterarrival.txt"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  10.5s, 10.5s, 7.5s, 7.5s, 7.5s, 7.5s, 6.75s, 6.75s, 6.75s, 6.75s, 6.0s, 6.0s, 5.25s, 5.25s, 4.5s, 3.75s, 3.75s, 3.75s, 3.0s ! rlf}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  0.02s, 0.02s, 0.02s, 0.02s, 0.02s ! rlf}
#**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  0.02s, 0.02s, 0.02s, 0.02s, 3.75s, 3.75s, 3.4s, 3.4s, 3.4s, 3.4s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime =  1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 1s, 3.0s, 3.0s, 2.6s, 2.6s, 2.25s, 1.9s, 1.9s, 1.9s, 1.5s ! rlf}
seed-set = ${repetition}
#seed-0-mt = ${seedInd = 0..4 ! rlf}
seed-0-mt = ${seedInd = 0..11 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/linkCheckBytes_CacheFlollower_newtable_${linkCheckBytes}



[Config InFileDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.484375, 0.775}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 30s, 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
# result-dir = results/incast/onerack/linkCheckBytes__${linkCheckBytes}
result-dir = results/incast/onerack/linkCheckBytes__${linkCheckBytes}


