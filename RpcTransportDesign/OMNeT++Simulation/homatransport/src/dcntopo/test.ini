[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.

# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 16}
DcnTopo.numTors = ${numTors = 9}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 40Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 10Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.2us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.2us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.00001us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.00001us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"
**.eth[*].queue.frameCapacity = 25
######################## Homa Transport Parameters ###############################
#rttBytes is computed as sending one full packet in one way and a grant in the other way.
**.host[*].**.rttBytes = ${RTT=0x2710} B ##10000B is the rttBytes (ie. rtt*nicLinkSpeed).
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = 7886} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT}"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 7886 }B
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
**.realLoadFactor = ${rlf=0.5, 0.6, 0.7, 0.8, 0.9}
#result-dir = results/testing/unschedPrio/LoadFactor__${rlf}--UnschedResolutionMode__${unschedPrioResolutionMode}--boostTailBytesPrio__${boostTailBytesPrio}


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -

[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = DCTCP}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 2884 4326 5768 7210 8652 10094 11536 12978 15862 17304 18746 21630 23072 24514 25956 27398 28840 31724 34608 36050 37492 40376 41818 44702 46144 47586 50470 53354 54796 57680 59122 62006 63448 66332 67774 70658 72100 74984 76426 93730 109592 126896 142758 160062 175924 191786 269654 346080 423948 500374 576800 654668 731094 808962 885388 961814 1058428 1155042 1250214 1346828 1442000 1538614 1635228 1730400 1827014 1922186 2210586 2498986 2787386 3075786 3364186 3652586 3940986 4229386 4517786 4806186 11537442 13459628 15381814 17305442 19227628 21149814 23073442 24995628 26917814 28840000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 2.03s, 1.685s, 1.459s, 1.289s, 1.156s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..4 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/100k__${linkCheckBytes}

[Config WorkloadIMC10]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = IMC10}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 2884 4326 5768 7210 8652 10094 18746 56238 93730 131222 168714 206206 243698 281190 318682 356174 447020 712348 973350 1243004 1508332 1775102 2037546 2307200 2572528 3038294}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 0.323s, 0.286s, 0.259s, 0.239s, 0.211s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..4 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 1}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/100k__${linkCheckBytes}

[Config WorkloadDataMining]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = DataMining}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 1442 2884 2884 2884 2884 2884 2884 2884 2884 2884 2884 4326 4326 4326 4326 4326 4326 4326 5768 5768 7210 7210 7210 8652 8652 10094 18746 56238 93730 131222 168714 206206 243698 281190 318682 356174 509026 1038240 1563128 2100994 2631650 8613066 31687950 55217064 78564486 961333814}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor = $rlf}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 8.631s, 7.209s, 6.194s, 5.432s, 4.840s ! rlf}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..4 ! rlf}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/100k__${linkCheckBytes}

[Config InFileDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.484375}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].workloadFile = "homa.dat"
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 0.05s}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/100k__${linkCheckBytes}
