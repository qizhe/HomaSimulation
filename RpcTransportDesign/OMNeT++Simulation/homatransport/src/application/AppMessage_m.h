//
// Generated file, do not edit! Created by nedtool 4.6 from application/AppMessage.msg.
//

#ifndef _APPMESSAGE_M_H_
#define _APPMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "inet/networklayer/common/L3Address.h"
// }}

/**
 * Class generated from <tt>application/AppMessage.msg:25</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet AppMessage
 * {
 *     inet::L3Address destAddr;
 *     inet::L3Address srcAddr;
 *     simtime_t msgCreationTime;
 *     simtime_t transportSchedDelay;
 *     simtime_t transportSchedPreemptionLag;
 *     long msgBytesOnWire;
 * }
 * </pre>
 */
class AppMessage : public ::cPacket
{
  protected:
    inet::L3Address destAddr_var;
    inet::L3Address srcAddr_var;
    simtime_t msgCreationTime_var;
    simtime_t transportSchedDelay_var;
    simtime_t transportSchedPreemptionLag_var;
    long msgBytesOnWire_var;

  private:
    void copy(const AppMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppMessage&);

  public:
    AppMessage(const char *name=NULL, int kind=0);
    AppMessage(const AppMessage& other);
    virtual ~AppMessage();
    AppMessage& operator=(const AppMessage& other);
    virtual AppMessage *dup() const {return new AppMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual inet::L3Address& getDestAddr();
    virtual const inet::L3Address& getDestAddr() const {return const_cast<AppMessage*>(this)->getDestAddr();}
    virtual void setDestAddr(const inet::L3Address& destAddr);
    virtual inet::L3Address& getSrcAddr();
    virtual const inet::L3Address& getSrcAddr() const {return const_cast<AppMessage*>(this)->getSrcAddr();}
    virtual void setSrcAddr(const inet::L3Address& srcAddr);
    virtual simtime_t getMsgCreationTime() const;
    virtual void setMsgCreationTime(simtime_t msgCreationTime);
    virtual simtime_t getTransportSchedDelay() const;
    virtual void setTransportSchedDelay(simtime_t transportSchedDelay);
    virtual simtime_t getTransportSchedPreemptionLag() const;
    virtual void setTransportSchedPreemptionLag(simtime_t transportSchedPreemptionLag);
    virtual long getMsgBytesOnWire() const;
    virtual void setMsgBytesOnWire(long msgBytesOnWire);
    int flow_id;
};

inline void doPacking(cCommBuffer *b, AppMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AppMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _APPMESSAGE_M_H_

