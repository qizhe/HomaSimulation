[General]
#####Config#####
# sets the transport to "HomaTransport" and the parameters for that transport.

# simulation global configuration options
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 16}
DcnTopo.numTors = ${numTors = 9}
DcnTopo.nicLinkSpeed = 100Gbps
DcnTopo.overSubFactor = ${overSubFactor = 0.25, 0.5, 1}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 100Gbps ,200Gbps, 400Gbps ! overSubFactor}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 1.2us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 1.2us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.0000us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.000us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.0us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = false}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"
#**.eth[*].queue.**.frameCapacity = 200
######################## Homa Transport Parameters ###############################
#rttBytes is computed as sending one full packet in one way and a grant in the other way.
**.host[*].**.rttBytes = ${RTT= 0x203A0, 0x1F7E8, 0x1F20C ! overSubFactor} B ##28500 is the rttBytes (ie. rtt*nicLinkSpeed).
#**.host[*].**.windowTimeout = 1.1
#**.host[*].**.finishTimeout = 1.1
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT}"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 50 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 132000, 129000, 127500 ! overSubFactor}B
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"
**.realLoadFactor = 0.1


[Config RecordAllStats]
#enable vector recording for globalListener
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true

#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all
#**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -

[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =28840000}"
**.host[*].trafficGeneratorApp[*].loadFactor = 0.1
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 1.9s, 1.9s, 1.9s ! overSubFactor}
**.host[*].trafficGeneratorApp[*].workloadFile = "${workloadFile = os/trace_homa_dctcp_4.txt.csv, os/trace_homa_dctcp_2.txt.csv, os/trace_homa_dctcp_1.txt.csv ! overSubFactor}"
**.host[*].trafficGeneratorApp[*].resultFile = "${resultFile = os/result_homa_dctcp_4.txt.csv, os/result_homa_dctcp_2.txt.csv, os/result_homa_dctcp_1.txt.csv ! overSubFactor}"
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! overSubFactor}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/os_${linkCheckBytes}
DcnTopo.QueueSizeFile = "${QueueSizeFile = os/queue_size_dctcp_4.txt, os/queue_size_dctcp_2.txt, os/queue_size_dctcp_1.txt ! overSubFactor }"

[Config WorkloadIMC10]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =3038294}"
**.host[*].trafficGeneratorApp[*].loadFactor = 0.1
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 0.74s, 0.37s, 0.19s, ! overSubFactor}
**.host[*].trafficGeneratorApp[*].workloadFile = "${workloadFile = os/trace_homa_aditya_4.txt.csv, os/trace_homa_aditya_2.txt.csv, os/trace_homa_aditya_1.txt.csv ! overSubFactor}"
**.host[*].trafficGeneratorApp[*].resultFile = "${resultFile = os/result_homa_aditya_4.txt.csv, os/result_homa_aditya_2.txt.csv, os/result_homa_aditya_1.txt.csv ! overSubFactor}"
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! overSubFactor}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/os_${linkCheckBytes}
DcnTopo.QueueSizeFile = "${QueueSizeFile = os/queue_size_aditya_4.txt, os/queue_size_aditya_2.txt, os/queue_size_aditya_1.txt ! overSubFactor}"

[Config WorkloadDataMining]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].**.workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges =961333814}"
**.host[*].trafficGeneratorApp[*].loadFactor = 0.1
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 9.5s, 9.5s, 9.5s ! overSubFactor}
**.host[*].trafficGeneratorApp[*].workloadFile = "${workloadFile = os/trace_homa_datamining_4.txt.csv, os/trace_homa_datamining_2.txt.csv, os/trace_homa_datamining_1.txt.csv ! overSubFactor}"
**.host[*].trafficGeneratorApp[*].resultFile = "${resultFile = os/result_homa_datamining_4.txt.csv, os/result_homa_datamining_2.txt.csv, os/result_homa_datamining_1.txt.csv ! overSubFactor}"
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! overSubFactor}
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}
result-dir = results/manyReceivers/comparison/os_${linkCheckBytes}
DcnTopo.QueueSizeFile = "${QueueSizeFile = results/queue_size_datamining_4.txt, results/queue_size_datamining_2.txt, results/queue_size_datamining_1.txt ! overSubFactor }"
